name: Build Arrakis Binaries

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

# Add permissions needed for creating releases.
permissions:
  contents: write
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.23.1'
        check-latest: true

    - name: Install OpenAPI Generator CLI
      run: |
        # Install default JDK (as per project's install-deps.sh)
        sudo apt-get update
        sudo apt-get install -y default-jdk
        
        # Install OpenAPI Generator using npm (as per project's install-deps.sh)
        npm install @openapitools/openapi-generator-cli -g
        
        # Verify installation
        openapi-generator-cli version

    - name: Download required binaries
      run: |
        mkdir -p resources/bin
        # Download busybox for initramfs creation
        curl -L -o resources/bin/busybox https://raw.githubusercontent.com/abshkbh/arrakis-images/main/busybox
        chmod +x resources/bin/busybox

    - name: Build API clients
      run: make serverapi chvapi

    - name: Build Go binaries
      run: make restserver client guestinit rootfsmaker cmdserver vsockserver vsockclient initramfs

    - name: Build rootfs
      run: sudo make guestrootfs

    - name: Create release artifacts directory
      run: mkdir -p release-artifacts

    - name: Copy binaries and config to artifacts directory
      run: |
        cp out/arrakis-restserver release-artifacts/
        cp out/arrakis-client release-artifacts/
        cp out/arrakis-guestinit release-artifacts/
        cp out/arrakis-rootfsmaker release-artifacts/
        cp out/arrakis-cmdserver release-artifacts/
        cp out/arrakis-vsockserver release-artifacts/
        cp out/arrakis-vsockclient release-artifacts/
        cp out/initramfs.cpio.gz release-artifacts/
        cp out/arrakis-guestrootfs-ext4.img release-artifacts/
        cp config.yaml release-artifacts/

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: arrakis-binaries
        path: release-artifacts/
        retention-days: 7

    - name: Create Release
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      id: create_release
      uses: softprops/action-gh-release@v1
      with:
        name: Release ${{ github.sha }}
        tag_name: release-${{ github.run_number }}
        files: |
          release-artifacts/arrakis-restserver
          release-artifacts/arrakis-client
          release-artifacts/arrakis-guestinit
          release-artifacts/arrakis-rootfsmaker
          release-artifacts/arrakis-cmdserver
          release-artifacts/arrakis-vsockserver
          release-artifacts/arrakis-vsockclient
          release-artifacts/initramfs.cpio.gz
          release-artifacts/arrakis-guestrootfs-ext4.img
          release-artifacts/config.yaml
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
